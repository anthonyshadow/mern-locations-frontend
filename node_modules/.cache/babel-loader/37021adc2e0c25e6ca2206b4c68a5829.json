{"ast":null,"code":"import React,{Suspense}from\"react\";import{BrowserRouter as Router,Route,Redirect,Switch}from\"react-router-dom\";// import Users from \"./user/pages/Users\";\n// import NewPlace from \"./places/pages/NewPlace\";\n// import UserPlaces from \"./places/pages/UserPlaces\";\n// import UpdatePlace from \"./places/pages/UpdatePlace\";\n// import Auth from \"./user/pages/Auth\";\nimport MainNavigation from\"./shared/components/Navigation/MainNavigation\";import LoadingSpinner from\"./shared/components/UIElements/LoadingSpinner\";import{AuthContext}from\"./shared/context/auth-context\";import{useAuth}from\"./shared/hooks/auth-hook\";//only loads routes when they are visited, makes application faster\nvar Users=React.lazy(function(){return import(\"./user/pages/Users\");});var NewPlace=React.lazy(function(){return import(\"./places/pages/NewPlace\");});var UserPlaces=React.lazy(function(){return import(\"./places/pages/UserPlaces\");});var UpdatePlace=React.lazy(function(){return import(\"./places/pages/UpdatePlace\");});var Auth=React.lazy(function(){return import(\"./user/pages/Auth\");});var App=function App(){var _useAuth=useAuth(),token=_useAuth.token,login=_useAuth.login,logout=_useAuth.logout,userId=_useAuth.userId;var routes;if(token){routes=/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,{path:\"/\",exact:true},/*#__PURE__*/React.createElement(Users,null)),/*#__PURE__*/React.createElement(Route,{path:\"/:userId/places\",exact:true},/*#__PURE__*/React.createElement(UserPlaces,null)),/*#__PURE__*/React.createElement(Route,{path:\"/places/new\",exact:true},/*#__PURE__*/React.createElement(NewPlace,null)),/*#__PURE__*/React.createElement(Route,{path:\"/places/:placeId\"},/*#__PURE__*/React.createElement(UpdatePlace,null)),/*#__PURE__*/React.createElement(Redirect,{to:\"/\"}));}else{routes=/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,{path:\"/\",exact:true},/*#__PURE__*/React.createElement(Users,null)),/*#__PURE__*/React.createElement(Route,{path:\"/:userId/places\",exact:true},/*#__PURE__*/React.createElement(UserPlaces,null)),/*#__PURE__*/React.createElement(Route,{path:\"/auth\"},/*#__PURE__*/React.createElement(Auth,null)),/*#__PURE__*/React.createElement(Redirect,{to:\"/auth\"}));}return/*#__PURE__*/React.createElement(AuthContext.Provider,{value:{isLoggedIn:!!token,token:token,userId:userId,login:login,logout:logout}},/*#__PURE__*/React.createElement(Router,null,/*#__PURE__*/React.createElement(MainNavigation,null),/*#__PURE__*/React.createElement(\"main\",null,/*#__PURE__*/React.createElement(Suspense,{fallback:/*#__PURE__*/React.createElement(\"div\",{className:\"center\"},/*#__PURE__*/React.createElement(LoadingSpinner,null))},routes))));};export default App;","map":{"version":3,"names":["React","Suspense","BrowserRouter","Router","Route","Redirect","Switch","MainNavigation","LoadingSpinner","AuthContext","useAuth","Users","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","token","login","logout","userId","routes","isLoggedIn"],"sources":["/Users/anthonyshadowitz/Documents/mern-projects/main/src/App.js"],"sourcesContent":["import React, { Suspense } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\n\n// import Users from \"./user/pages/Users\";\n// import NewPlace from \"./places/pages/NewPlace\";\n// import UserPlaces from \"./places/pages/UserPlaces\";\n// import UpdatePlace from \"./places/pages/UpdatePlace\";\n// import Auth from \"./user/pages/Auth\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport LoadingSpinner from \"./shared/components/UIElements/LoadingSpinner\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport { useAuth } from \"./shared/hooks/auth-hook\";\n\n//only loads routes when they are visited, makes application faster\nconst Users = React.lazy(() => import(\"./user/pages/Users\"));\nconst NewPlace = React.lazy(() => import(\"./places/pages/NewPlace\"));\nconst UserPlaces = React.lazy(() => import(\"./places/pages/UserPlaces\"));\nconst UpdatePlace = React.lazy(() => import(\"./places/pages/UpdatePlace\"));\nconst Auth = React.lazy(() => import(\"./user/pages/Auth\"));\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout,\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense\n            fallback={\n              <div className=\"center\">\n                <LoadingSpinner />\n              </div>\n            }\n          >\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n"],"mappings":"AAAA,MAAOA,MAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OACEC,aAAa,GAAIC,OADnB,CAEEC,KAFF,CAGEC,QAHF,CAIEC,MAJF,KAKO,kBALP,CAOA;AACA;AACA;AACA;AACA;AACA,MAAOC,eAAP,KAA2B,+CAA3B,CACA,MAAOC,eAAP,KAA2B,+CAA3B,CACA,OAASC,WAAT,KAA4B,+BAA5B,CACA,OAASC,OAAT,KAAwB,0BAAxB,CAEA;AACA,GAAMC,MAAK,CAAGX,KAAK,CAACY,IAAN,CAAW,iBAAM,QAAO,oBAAP,CAAN,EAAX,CAAd,CACA,GAAMC,SAAQ,CAAGb,KAAK,CAACY,IAAN,CAAW,iBAAM,QAAO,yBAAP,CAAN,EAAX,CAAjB,CACA,GAAME,WAAU,CAAGd,KAAK,CAACY,IAAN,CAAW,iBAAM,QAAO,2BAAP,CAAN,EAAX,CAAnB,CACA,GAAMG,YAAW,CAAGf,KAAK,CAACY,IAAN,CAAW,iBAAM,QAAO,4BAAP,CAAN,EAAX,CAApB,CACA,GAAMI,KAAI,CAAGhB,KAAK,CAACY,IAAN,CAAW,iBAAM,QAAO,mBAAP,CAAN,EAAX,CAAb,CAEA,GAAMK,IAAG,CAAG,QAANA,IAAM,EAAM,CAChB,aAAyCP,OAAO,EAAhD,CAAQQ,KAAR,UAAQA,KAAR,CAAeC,KAAf,UAAeA,KAAf,CAAsBC,MAAtB,UAAsBA,MAAtB,CAA8BC,MAA9B,UAA8BA,MAA9B,CAEA,GAAIC,OAAJ,CAEA,GAAIJ,KAAJ,CAAW,CACTI,MAAM,cACJ,oBAAC,MAAD,mBACE,oBAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,CAAgB,KAAK,KAArB,eACE,oBAAC,KAAD,MADF,CADF,cAIE,oBAAC,KAAD,EAAO,IAAI,CAAC,iBAAZ,CAA8B,KAAK,KAAnC,eACE,oBAAC,UAAD,MADF,CAJF,cAOE,oBAAC,KAAD,EAAO,IAAI,CAAC,aAAZ,CAA0B,KAAK,KAA/B,eACE,oBAAC,QAAD,MADF,CAPF,cAUE,oBAAC,KAAD,EAAO,IAAI,CAAC,kBAAZ,eACE,oBAAC,WAAD,MADF,CAVF,cAaE,oBAAC,QAAD,EAAU,EAAE,CAAC,GAAb,EAbF,CADF,CAiBD,CAlBD,IAkBO,CACLA,MAAM,cACJ,oBAAC,MAAD,mBACE,oBAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,CAAgB,KAAK,KAArB,eACE,oBAAC,KAAD,MADF,CADF,cAIE,oBAAC,KAAD,EAAO,IAAI,CAAC,iBAAZ,CAA8B,KAAK,KAAnC,eACE,oBAAC,UAAD,MADF,CAJF,cAOE,oBAAC,KAAD,EAAO,IAAI,CAAC,OAAZ,eACE,oBAAC,IAAD,MADF,CAPF,cAUE,oBAAC,QAAD,EAAU,EAAE,CAAC,OAAb,EAVF,CADF,CAcD,CAED,mBACE,oBAAC,WAAD,CAAa,QAAb,EACE,KAAK,CAAE,CACLC,UAAU,CAAE,CAAC,CAACL,KADT,CAELA,KAAK,CAAEA,KAFF,CAGLG,MAAM,CAAEA,MAHH,CAILF,KAAK,CAAEA,KAJF,CAKLC,MAAM,CAAEA,MALH,CADT,eASE,oBAAC,MAAD,mBACE,oBAAC,cAAD,MADF,cAEE,6CACE,oBAAC,QAAD,EACE,QAAQ,cACN,2BAAK,SAAS,CAAC,QAAf,eACE,oBAAC,cAAD,MADF,CAFJ,EAOGE,MAPH,CADF,CAFF,CATF,CADF,CA0BD,CAlED,CAoEA,cAAeL,IAAf"},"metadata":{},"sourceType":"module"}