{"ast":null,"code":"import { useState, useCallback, useRef, useEffect } from \"react\";\nexport const useHttpClient = () => {\n  const [error, setError] = useState();\n  const [isLoading, setIsLoading] = useState(false); //handles error incase page changed while making a request\n\n  const activeHttpRequests = useRef([]); //send request hook\n\n  const sendRequest = useCallback(async function (url) {\n    let method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"GET\";\n    let body = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    let headers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    setIsLoading(true);\n    const httpAbortCtrl = new AbortController(); //useRef always uses a current property\n\n    activeHttpRequests.current.push(httpAbortCtrl);\n\n    try {\n      const response = await fetch(url, {\n        method,\n        body,\n        headers,\n        signal: httpAbortCtrl.signal\n      });\n      const responseData = await response.json();\n\n      if (!response.ok) {\n        throw new Error(responseData.message);\n      }\n\n      return responseData;\n    } catch (err) {\n      setError(err.message);\n    }\n\n    setIsLoading(false);\n  }, []);\n\n  const clearError = () => {\n    setError(null);\n  }; //return function is executed as a cleanup function before the next time useEffect runs again,\n  // or when the component that uses useEffect unmounts\n\n\n  useEffect(() => {\n    return () => {\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n  return {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  };\n};","map":{"version":3,"names":["useState","useCallback","useRef","useEffect","useHttpClient","error","setError","isLoading","setIsLoading","activeHttpRequests","sendRequest","url","method","body","headers","httpAbortCtrl","AbortController","current","push","response","fetch","signal","responseData","json","ok","Error","message","err","clearError","forEach","abortCtrl","abort"],"sources":["/Users/anthonyshadowitz/Documents/mern-projects/main/src/shared/hooks/http-hook.js"],"sourcesContent":["import { useState, useCallback, useRef, useEffect } from \"react\";\n\nexport const useHttpClient = () => {\n  const [error, setError] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n\n  //handles error incase page changed while making a request\n  const activeHttpRequests = useRef([]);\n\n  //send request hook\n  const sendRequest = useCallback(\n    async (url, method = \"GET\", body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      //useRef always uses a current property\n      activeHttpRequests.current.push(httpAbortCtrl);\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal,\n        });\n\n        const responseData = await response.json();\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n      }\n      setIsLoading(false);\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  //return function is executed as a cleanup function before the next time useEffect runs again,\n  // or when the component that uses useEffect unmounts\n  useEffect(() => {\n    return () => {\n        activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort())\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,MAAhC,EAAwCC,SAAxC,QAAyD,OAAzD;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;EACjC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,EAAlC;EACA,MAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C,CAFiC,CAIjC;;EACA,MAAMS,kBAAkB,GAAGP,MAAM,CAAC,EAAD,CAAjC,CALiC,CAOjC;;EACA,MAAMQ,WAAW,GAAGT,WAAW,CAC7B,gBAAOU,GAAP,EAA0D;IAAA,IAA9CC,MAA8C,uEAArC,KAAqC;IAAA,IAA9BC,IAA8B,uEAAvB,IAAuB;IAAA,IAAjBC,OAAiB,uEAAP,EAAO;IACxDN,YAAY,CAAC,IAAD,CAAZ;IACA,MAAMO,aAAa,GAAG,IAAIC,eAAJ,EAAtB,CAFwD,CAGxD;;IACAP,kBAAkB,CAACQ,OAAnB,CAA2BC,IAA3B,CAAgCH,aAAhC;;IACA,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACT,GAAD,EAAM;QAChCC,MADgC;QAEhCC,IAFgC;QAGhCC,OAHgC;QAIhCO,MAAM,EAAEN,aAAa,CAACM;MAJU,CAAN,CAA5B;MAOA,MAAMC,YAAY,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAA3B;;MAEA,IAAI,CAACJ,QAAQ,CAACK,EAAd,EAAkB;QAChB,MAAM,IAAIC,KAAJ,CAAUH,YAAY,CAACI,OAAvB,CAAN;MACD;;MAED,OAAOJ,YAAP;IACD,CAfD,CAeE,OAAOK,GAAP,EAAY;MACZrB,QAAQ,CAACqB,GAAG,CAACD,OAAL,CAAR;IACD;;IACDlB,YAAY,CAAC,KAAD,CAAZ;EACD,CAzB4B,EA0B7B,EA1B6B,CAA/B;;EA6BA,MAAMoB,UAAU,GAAG,MAAM;IACvBtB,QAAQ,CAAC,IAAD,CAAR;EACD,CAFD,CArCiC,CAyCjC;EACA;;;EACAH,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACTM,kBAAkB,CAACQ,OAAnB,CAA2BY,OAA3B,CAAmCC,SAAS,IAAIA,SAAS,CAACC,KAAV,EAAhD;IACH,CAFD;EAGD,CAJQ,EAIN,EAJM,CAAT;EAMA,OAAO;IAAExB,SAAF;IAAaF,KAAb;IAAoBK,WAApB;IAAiCkB;EAAjC,CAAP;AACD,CAlDM"},"metadata":{},"sourceType":"module"}